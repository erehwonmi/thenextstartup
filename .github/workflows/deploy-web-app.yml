name: Build Web App
on:
  push:
    branches: ["main"]
    paths:
        - '.github/workflows/deploy-web-app.yml'
        - 'apps/web-app/**'
        - 'db/**/*.*'
        - 'Dockerfile.webapp'
        - package.json
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "erehwonmi/thenextstartup-web"

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.0
          cache: 'npm'
      - name: NPM Install
        run: npm install
      - name: NPM Install Drizzle-kit
        run: npm install drizzle-kit
      - name: Generate ENV File for DB
        run: |
          cat <<-EOF >> .env
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DB_AUTH_TOKEN=${{ secrets.DB_AUTH_TOKEN }}
          EOF
      - name: Generate Drizzle Client
        run: npm run db:generate
      - name: Push Drizzle Turso Schema
        run: npm run db:push

  deploy:
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - name: "Clone repo"
        uses: actions/checkout@v3
      - name: Dynamically creating .env file
        run: |
          cat <<-EOF >> .env
          NODE_ENV=PRODUCTION
          ENV=PRODUCTION
          AXIOM_TOKEN=${{ secrets.AXIOM_TOKEN }}
          AXIOM_DATASET=${{ secrets.AXIOM_DATASET }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DB_AUTH_TOKEN=${{ secrets.DB_AUTH_TOKEN }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          HOST_NAME=${{ secrets.HOST_NAME }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET_KEY=${{ secrets.STRIPE_WEBHOOK_SECRET_KEY }}
          RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
          LEMONSQUEEZY_SECRET_KEY=${{ secrets.LEMONSQUEEZY_SECRET_KEY }}
          LEMONSQUEEZY_STORE_ID=${{ secrets.LEMONSQUEEZY_STORE_ID }}
          LEMONSQUEEZY_API_KEY=${{ secrets.LEMONSQUEEZY_API_KEY }}
          EOF
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN  }}
      - name: Build image and push to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.webapp
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - name: Deploy to Coolify
        run: | 
         curl --request GET '${{ secrets.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'